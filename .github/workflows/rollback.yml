# Arquivo: .github/workflows/rollback-logic.yml

name: (Reusable Test) Rollback Logic
on:
  workflow_call:
    inputs:
      stable_commit_sha:
        type: string
        required: true
      pr_number_to_revert:
        type: string
        required: true
      environment_name:
        type: string
        required: true
      files_to_revert:
        type: string
        required: true

jobs:
  apply-stable-state:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment_name }}
    strategy:
      fail-fast: false
      matrix:
        file: ${{ fromJson(inputs.files_to_revert) }}
    steps:
      - name: '1. Checkout do código na VERSÃO ESTÁVEL'
        uses: actions/checkout@v4
        with:
          # AQUI ESTÁ A MÁGICA:
          # Ele usa o SHA que foi passado como input para voltar o código no tempo.
          ref: ${{ inputs.stable_commit_sha }}

      - name: Setup Deck
        uses: kong/setup-deck@v1
        with:
          deck-version: 1.47.1

      - name: '2. Deck Sync Rollback para cada cluster'
        run: |
          echo "Revertendo o arquivo ${{ matrix.file }} para o estado do commit ${{ inputs.stable_commit_sha }}"

  # Job para criar o PR de reversão do código
  create-revert-pr-manual:
    runs-on: ubuntu-latest
    needs: apply-stable-state
    if: success()
    steps:
      - name: 'Checkout da branch principal'
        uses: actions/checkout@v4
        with:
          # Precisamos do token aqui para poder fazer push
          token: ${{ secrets.GH_TOKEN }} 
          ref: 'main'

      - name: 'Configurar Git'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: 'Executar Revert com Git e Criar PR com gh'
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          PR_NUMBER=${{ inputs.pr_number_to_revert }}
          # Obter o SHA do commit de merge do PR original
          MERGE_COMMIT_SHA=$(gh pr view $PR_NUMBER --json mergeCommit --jq '.mergeCommit.oid')

          # Criar uma nova branch para o revert
          NEW_BRANCH="revert-${PR_NUMBER}-$(date +%s)"
          git checkout -b $NEW_BRANCH

          # Executar o revert. -m 1 é essencial para reverter um merge commit.
          # --no-edit evita que o git abra um editor de texto.
          git revert -m 1 --no-edit $MERGE_COMMIT_SHA

          # Enviar a nova branch para o repositório
          git push origin $NEW_BRANCH

          # Criar o Pull Request
          gh pr create \
            --base main \
            --head $NEW_BRANCH \
            --title "Revert: Rollback do PR #${PR_NUMBER}" \
            --body "Este PR reverte as alterações introduzidas no PR #${PR_NUMBER} como parte de um processo de rollback automatizado."