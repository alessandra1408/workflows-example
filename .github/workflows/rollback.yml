# Arquivo: .github/workflows/rollback.yml
name: Rollback Kong Staging Configuration

permissions:
  contents: write
  pull-requests: write
  actions: read

on:
  workflow_call:
    inputs:
      files_to_apply:
        type: string
        required: true
      stable_commit_sha:
        type: string
        required: false
        default: ''
      pr_number_to_revert:
        type: string
        required: true
      environment:
        type: string
        required: true
      region:
        type: string
        description: "Region"
        required: true
      region-name:
        type: string
        description: "The name of region"
        required: true

jobs:
  rollback:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    strategy:
      fail-fast: false
      matrix:
        file: ${{ fromJson(inputs.files_to_apply) }}
        region: [ '${{ inputs.region }}' ]
        region-name: [ '${{ inputs.region-name }}' ]
    steps:
      - name: Checkout Code at Correct Version
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.stable_commit_sha }}

      - uses: kong/setup-deck@v1
        with:
          deck-version: 1.47.1

      - name: validate 
        run: |
          echo "job finished"
          echo "region: ${{ inputs.region }}"
          echo "region-name: ${{ inputs.region-name }}"

  create-revert-pr-manual:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: 'Checkout da branch principal (main)'
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }} 
          ref: 'main'

      - name: 'Configurar Git'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: 'Executar Rollback com Git Checkout e Criar PR'
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          STABLE_SHA=${{ inputs.stable_commit_sha }}
          PR_NUMBER=${{ inputs.pr_number_to_revert }}
          
          echo "Iniciando rollback da pasta 'services/' para o estado do commit ${STABLE_SHA}"
          
          NEW_BRANCH="rollback-services-pr-${PR_NUMBER}-$(date +%s)"
          git checkout -b $NEW_BRANCH
          
          # --- NOVA LÓGICA DE ROLLBACK ---
          # Aqui, restauramos a pasta 'services/' para o estado exato
          # em que ela estava no commit estável.
          # Isso irá deletar arquivos novos, restaurar arquivos deletados e
          # reverter modificações, tudo dentro de 'services/'.
          git checkout ${STABLE_SHA} -- 'services/'
          
          # Agora, fazemos o commit das mudanças (se houver alguma)
          # O 'git diff-index' verifica se há mudanças para commitar
          if ! git diff-index --quiet HEAD; then
            git commit -m "Rollback (services/): Restaura pasta para o estado de ${STABLE_SHA:0:7}"
          else
            echo "Nenhuma mudança detectada na pasta 'services/' entre main e o commit estável. Nada para fazer."
            # Se não houver mudanças, podemos parar aqui para não criar um PR vazio.
            # (Opcional: você pode adicionar lógica para sair se não houver mudanças)
          fi
          # --- FIM DA LÓGICA ---
          
          # Enviar a nova branch para o repositório
          git push origin $NEW_BRANCH
          
          # Criar o Pull Request
          gh pr create \
            --base main \
            --head $NEW_BRANCH \
            --title "Rollback (services/): Restaura para o commit ${STABLE_SHA:0:7}" \
            --body "Este PR executa um rollback na pasta \`services/\`, restaurando seu conteúdo para o estado do commit estável \`${STABLE_SHA}\`. Isso foi acionado devido ao PR #${PR_NUMBER}."