name: Push configs to Kong API GW Staging

permissions:
  contents: write
  pull-requests: write
  deployments: write
  actions: read

on:
  workflow_call:
    inputs:
      region:
        type: string
        description: "Region"
        required: true
      region_name:
        type: string
        description: "The name of region"
        required: true
      environment:
        type: string
        description: "The name of environment"
        required: true
      dynamic_environment:
        type: string
        description: "The name of dynamic environment"
        required: true
      files_to_apply:
        type: string
        required: false
        default: ''
      stable_commit_sha:
        type: string
        description: "SHA do commit estável"
        required: false
      is_rollback:
        type: boolean
        description: "Flag to indicate if it's a rollback"
        required: false
        default: false

jobs:
  start_job:
    runs-on: ubuntu-latest
    steps:
      - name: Show who started the job
        run: |
          echo "Iniciando o apply na região de Virginia.
          Este job foi iniciado por: $GITHUB_ACTOR"

  approve:
    runs-on: ubuntu-latest
    if: ${{ inputs.is_rollback == false }}
    needs: [start_job]
    environment: ${{ inputs.dynamic_environment }}
    steps:
      - name: Aprovar Mudanças
        run: echo "Mudanças aprovadas para o ambiente '${{ inputs.dynamic_environment }}'"

  apply:
    runs-on: ubuntu-latest
    needs: [approve]
    if: |
      always() && (needs.approve.result == 'success' && inputs.is_rollback == false) || (inputs.is_rollback == true)
    environment: ${{ inputs.environment }}
    strategy:
      fail-fast: false
      matrix:
        file: ${{ fromJson(inputs.files_to_apply) }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.is_rollback == true && inputs.stable_commit_sha || github.sha }}
          fetch-depth: 0 

      - name: Verify Checkout Version
        run: |
          echo "--- VERIFICAÇÃO DE CHECKOUT ---"
          echo "inputs.is_rollback: ${{ inputs.is_rollback }}"
          echo "Commit que foi realmente baixado (HEAD):"
          git log -n 1 --oneline

      - name: Test File Preparation Logic
        if: inputs.is_rollback == true
        run: |
          FILE_TO_PROCESS="${{ matrix.file }}"
          echo "--- TESTE DA LÓGICA DE ROLLBACK (Arquivo: $FILE_TO_PROCESS) ---"

          # Verifica se o arquivo NÃO existe no disco
          if [ ! -f "$FILE_TO_PROCESS" ]; then
            echo "Arquivo NÃO encontrado (Rollback de Adição)."
            echo "Criando 'stub' de deleção..."
            
            TAG_NAME=$(basename "$FILE_TO_PROCESS" .yml)
            
            printf "_format_version: \"3.0\"\n_tags:\n  - %s\n" "$TAG_NAME" > "$FILE_TO_PROCESS"
            
            echo "--- Conteúdo do Stub Gerado ($FILE_TO_PROCESS) ---"
            cat "$FILE_TO_PROCESS"
            echo "-------------------------------------"
            echo "Teste do Caso 1 (Criação de Stub) BEM-SUCEDIDO."
            
          else
            echo "Arquivo $FILE_TO_PROCESS encontrado (Rollback de Modificação/Deleção)."
            echo "--- Conteúdo do Arquivo ---"
            cat "$FILE_TO_PROCESS"
            echo "-------------------------------------"
            echo "Teste do Caso 2 ou 3 (Arquivo Existente) BEM-SUCEDIDO."
          fi

      - uses: kong/setup-deck@v1
        with:
          deck-version: 1.47.1

      - name: validate 
        run: echo "job finished"