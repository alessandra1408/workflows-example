name: Push configs to Kong API GW Staging

permissions:
  contents: write
  pull-requests: write
  deployments: write
  actions: read

on:
  workflow_call:
    inputs:
      region:
        type: string
        description: "Region"
        required: true
      region_name:
        type: string
        description: "The name of region"
        required: true
      environment:
        type: string
        description: "The name of environment"
        required: true
      dynamic_environment:
        type: string
        description: "The name of dynamic environment"
        required: true
      files_to_apply:
        type: string
        required: false
        default: ''
      stable_commit_sha:
        type: string
        description: "SHA do commit estável"
        required: false
      is_rollback:
        type: boolean
        description: "Flag to indicate if it's a rollback"
        required: false
        default: false

jobs:
  start_job:
    runs-on: ubuntu-latest
    steps:
      - name: Show who started the job
        run: |
          echo "Iniciando o apply na região de Virginia.
          Este job foi iniciado por: $GITHUB_ACTOR"

  approve:
    runs-on: ubuntu-latest
    if: ${{ inputs.is_rollback == false }}
    needs: [start_job]
    environment: ${{ inputs.dynamic_environment }}
    steps:
      - name: Aprovar Mudanças
        run: echo "Mudanças aprovadas para o ambiente '${{ inputs.dynamic_environment }}'"

  apply:
    runs-on: ubuntu-latest
    needs: [approve]
    if: |
      always() && (needs.approve.result == 'success' && inputs.is_rollback == false) || (inputs.is_rollback == true)
    environment: ${{ inputs.environment }}
    strategy:
      fail-fast: false
      matrix:
        file: ${{ fromJson(inputs.files_to_apply) }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.stable_commit_sha || github.sha }}

      - uses: kong/setup-deck@v1
        with:
          deck-version: 1.47.1

      - name: validate 
        run: echo "job finished"
